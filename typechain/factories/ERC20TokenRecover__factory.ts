/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20TokenRecover,
  ERC20TokenRecoverInterface,
} from "../ERC20TokenRecover";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "recoverETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a6e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b14610089578063d3335553146100b5578063f2fde38b146100c857600080fd5b8063715018a61461006c5780638980f11f14610076575b600080fd5b6100746100db565b005b61007461008436600461091b565b61016d565b6033546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100746100c3366004610945565b610232565b6100746100d636600461095e565b6103c1565b60335473ffffffffffffffffffffffffffffffffffffffff163314610161576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61016b60006104f1565b565b60335473ffffffffffffffffffffffffffffffffffffffff1633146101ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610158565b61022e61021060335473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff84169083610568565b5050565b60335473ffffffffffffffffffffffffffffffffffffffff1633146102b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610158565b60006102d460335473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461032b576040519150601f19603f3d011682016040523d82523d6000602084013e610330565b606091505b505090508061022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4552433230546f6b656e5265636f7665723a2053454e44494e475f455448455260448201527f5f4641494c4544000000000000000000000000000000000000000000000000006064820152608401610158565b60335473ffffffffffffffffffffffffffffffffffffffff163314610442576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610158565b73ffffffffffffffffffffffffffffffffffffffff81166104e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610158565b6104ee816104f1565b50565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526105f59084906105fa565b505050565b600061065c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107069092919063ffffffff16565b8051909150156105f5578080602001905181019061067a9190610979565b6105f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610158565b6060610715848460008561071f565b90505b9392505050565b6060824710156107b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610158565b843b610819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610158565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161084291906109cb565b60006040518083038185875af1925050503d806000811461087f576040519150601f19603f3d011682016040523d82523d6000602084013e610884565b606091505b509150915061089482828661089f565b979650505050505050565b606083156108ae575081610718565b8251156108be5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015891906109e7565b803573ffffffffffffffffffffffffffffffffffffffff8116811461091657600080fd5b919050565b6000806040838503121561092e57600080fd5b610937836108f2565b946020939093013593505050565b60006020828403121561095757600080fd5b5035919050565b60006020828403121561097057600080fd5b610718826108f2565b60006020828403121561098b57600080fd5b8151801515811461071857600080fd5b60005b838110156109b657818101518382015260200161099e565b838111156109c5576000848401525b50505050565b600082516109dd81846020870161099b565b9190910192915050565b6020815260008251806020840152610a0681604085016020870161099b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212201ffc6123574e5aa73ce7d9ca994e349ece50e9b976cd572f67f225da0ab5163e64736f6c63430008090033";

type ERC20TokenRecoverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenRecoverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20TokenRecover__factory extends ContractFactory {
  constructor(...args: ERC20TokenRecoverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20TokenRecover> {
    return super.deploy(overrides || {}) as Promise<ERC20TokenRecover>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20TokenRecover {
    return super.attach(address) as ERC20TokenRecover;
  }
  connect(signer: Signer): ERC20TokenRecover__factory {
    return super.connect(signer) as ERC20TokenRecover__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenRecoverInterface {
    return new utils.Interface(_abi) as ERC20TokenRecoverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20TokenRecover {
    return new Contract(address, _abi, signerOrProvider) as ERC20TokenRecover;
  }
}
